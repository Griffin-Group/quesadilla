name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"] #, "3.11", "3.10"]
        os: [ubuntu-latest] #, macos-latest, windows-latest]
        toolchain:
          - {compiler: gcc, version: 13}
          #- {compiler: intel, version: '2023.2'}
          #- {compiler: intel-classic, version: '2021.10'}
          #- {compiler: nvidia-hpc, version: '23.11'}
        #include:
        #  - os: ubuntu-latest
        #    toolchain: {compiler: gcc, version: 12}
        #exclude:
        #  - os: macos-latest
        #    toolchain: {compiler: intel, version: '2023.2'}
        #  - os: macos-latest
        #    toolchain: {compiler: nvidia-hpc, version: '23.11'}
        #  - os: windows-latest
        #    toolchain: {compiler: nvidia-hpc, version: '23.11'}

    steps:
      - uses: actions/checkout@v4
      # - uses: mpi4py/setup-mpi@v1 # uncomment for MPI support
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}
      - name: Install BLAS (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libblas-dev liblapack-dev
      - name: Install BLAS (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install openblas
      - name: Install BLAS (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install openblas --confirm

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest seekpath
          python -m pip install .

      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
